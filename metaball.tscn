[gd_scene load_steps=12 format=2]

[sub_resource type="PhysicsMaterial" id=1]
bounce = 1.0

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 18

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShader" id=12]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out3p0 = n_out2p0 - n_in3p1;

// VectorLen:4
	float n_out4p0 = length(n_out3p0);

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0 = n_out4p0 * n_in5p1;

// ScalarFunc:6
	float n_out6p0 = 1.0 - n_out5p0;

// ScalarFunc:7
	float n_out7p0 = min(max(n_out6p0, 0.0), 1.0);

// VectorDecompose:9
	float n_out9p0 = vec3(n_out7p0).x;
	float n_out9p1 = vec3(n_out7p0).y;
	float n_out9p2 = vec3(n_out7p0).z;

// Output:0
	COLOR.a = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 866.665, 0 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1720, 60 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 20, 120 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 240, 100 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 460, 140 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 640, 80 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( 860, 80 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( 1123.22, 108.75 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( 1420, 60 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 7, 0, 9, 0, 0, 1, 7, 0, 9, 0 )

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )

[sub_resource type="CircleShape2D" id=14]

[node name="metaball" type="RigidBody2D"]
physics_material_override = SubResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 13 )
margin_left = -30.0
margin_top = -30.0
margin_right = 30.0
margin_bottom = 30.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 14 )
